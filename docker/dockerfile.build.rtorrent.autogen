# syntax=docker/dockerfile:experimental
#
# Copy the minimal build context required to create the automake build
# scripts so that unrelated changes to 'Makefile.am' files does not
# invalidate the build cache.
#
# Since running autogen invalidates most of the cached build files the
# build result of autogen is copied to a new build result image.

# TODO: Check if more of the rsync'ed files can be empty.

ARG REPOSITORY
ARG TAG_APPEND

# TODO: Rename to .stage, we start by creating a result stage image
# for libtorrent.

# TODO: Put timestamps in tmpfs?


FROM "${REPOSITORY}/build/base/compiler:${TAG_APPEND}" as build

COPY /autogen /build

RUN echo -e "\033[0;32mlibtorrent autogen.sh\033[0m"; set -xe; \
\
touch /timestamp.autogen; \
sleep 1.1; \
\
./autogen.sh; \
\
find . \
  -not -type d -and \
  -newer /timestamp.autogen \
  -exec dirname '{}' \; | uniq | tr '\n' '\0' | (mkdir -p /deploy/output && cd /deploy/output && xargs -0 -r mkdir -p); \
find . \
  -not -type d -and \
  -newer /timestamp.autogen \
  -exec mv -v "{}" "/deploy/output/{}" \;


FROM "${REPOSITORY}/stage:global"

RUN mkdir -p /deploy/output

COPY --from=build /deploy/output /deploy/source
