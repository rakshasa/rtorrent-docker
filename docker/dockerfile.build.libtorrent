# syntax=docker/dockerfile:experimental

ARG REPOSITORY
ARG TAG_APPEND


FROM "${REPOSITORY}/build/rtorrent:${TAG_APPEND}" AS stage.configure

COPY /libtorrent.tar.gz /stage/libtorrent.tar.gz

RUN tar ${RDO_TAR_X_ARGS} /stage/libtorrent.tar.gz \
  --directory '/deploy/libtorrent/source' \
  --wildcards '*.am' \
  --wildcards '*.m4' \
  --wildcards '*.pc.in' \
  --no-wildcards './configure.ac'


FROM "${REPOSITORY}/base/build/rtorrent:${TAG_APPEND}" AS build.configure

WORKDIR "/build/libtorrent/output"

COPY --from=stage.configure /deploy/libtorrent/source/ /build/libtorrent/source/

RUN set -xe; \
\
source /env.configure; \
\
eval ${RDO_TIMESTAMP_LS} "/build/libtorrent/source/src"; \
eval ${RDO_TIMESTAMP_UPDATE}; \
\
/build/libtorrent/source/configure --prefix=/prefix --enable-debug --enable-extra-debug; \
\
eval ${RDO_TIMESTAMP_LS} "."; \
\
rdo-find-move --replace "." "/deploy/output" \
  "( \
   -not -type d -and \
   -not -name *.Po -and \
   -not -name *.Plo -and \
   -not -name *.log -and \
   -newer ${RDO_TIMESTAMP_PATH} \
   )"


FROM "${REPOSITORY}/build/rtorrent:${TAG_APPEND}" AS stage.compile

COPY --from=build.configure /deploy/output/ /stage/output/

RUN set -xe; \
\
rdo-find-move "/stage/output" "/deploy/libtorrent/output" "-not -type d"; \
eval ${RDO_TIMESTAMP_LS} "/deploy/libtorrent/output/src"

COPY /libtorrent.tar.gz /stage/libtorrent.tar.gz

RUN tar ${RDO_TAR_X_ARGS} /stage/libtorrent.tar.gz \
  --directory '/deploy/libtorrent/source' \
  --wildcards '*.am' \
  --wildcards '*.m4' \
  --wildcards '*.pc.in' \
  --wildcards '*.cc' \
  --wildcards '*.h' \
  --no-wildcards './configure.ac'


FROM "${REPOSITORY}/base/build/rtorrent:${TAG_APPEND}" AS build.compile

COPY --from=stage.compile /deploy/libtorrent/source/ /build/libtorrent/source/
COPY --from=stage.compile /deploy/prefix/ /prefix/

ARG IGNORE_BUILD_ERROR=no

RUN \
--mount=type=bind,rw,from=stage.compile,source=/deploy/libtorrent/output,target=/build/libtorrent/output \
\
set -xe; cd /build/libtorrent/output; \
\
eval ${RDO_TIMESTAMP_LS} "/build/libtorrent/source/src"; \
eval ${RDO_TIMESTAMP_LS} "/build/libtorrent/output/src"; \
eval ${RDO_TIMESTAMP_UPDATE}; \
\
rm -f ./status.{success,failure}; \
\
cat config.h; \
\
#if make -j12 && make -j12 install && make -j12 check TESTS=; then \
if make -j12 && make -j12 install; then \
  touch ./status.success; \
else \
  touch ./status.failure; \
\
  if [ "${IGNORE_BUILD_ERROR}" != "yes" ]; then \
    exit 1; \
  fi \
fi; \
\
rdo-find-move --keep-directory "." "/deploy/output" \
  "( \
   -not -type d -and \
   -not -name *.log -and \
   -newer ${RDO_TIMESTAMP_PATH} \
   )"; \
\
rdo-find-move "/prefix" "/deploy/prefix" \
  "( \
   -not -type d -and \
   -newer ${RDO_TIMESTAMP_PATH} \
   )"


FROM "${REPOSITORY}/build/rtorrent:${TAG_APPEND}" AS stage.output


FROM "${REPOSITORY}/stage:global"

COPY --from=stage.output /deploy/ /deploy/

COPY --from=build.compile /deploy/prefix/ /stage/prefix/
RUN rdo-find-move "/stage/prefix" "/deploy/prefix" "-not -type d"

COPY --from=build.compile /deploy/output/ /stage/output/
RUN set -xe; \
\
rm -f /deploy/libtorrent/output/status.{success,failure}; \
rdo-find-move "/stage/output" "/deploy/libtorrent/output" "-not -type d"

RUN \
eval ${RDO_TIMESTAMP_LS} "/deploy/libtorrent/output/src" || : ; \
eval ${RDO_TIMESTAMP_LS} "/deploy/prefix/include/torrent" || :
