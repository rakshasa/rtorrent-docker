# syntax=docker/dockerfile:experimental

ARG REPOSITORY
ARG TAG_APPEND


FROM "${REPOSITORY}/build/libtorrent/stage:${TAG_APPEND}" AS stage


FROM "${REPOSITORY}/build/base/compiler:${TAG_APPEND}" AS build

COPY /compile /build/libtorrent-source

RUN \
--mount=type=bind,from=stage,source=/deploy/libtorrent-source,target=/stage/libtorrent-source \
rsync -rlpgoD -muc -t /stage/libtorrent-source/ /build/libtorrent-source/

RUN \
--mount=type=bind,rw,from=stage,source=/deploy/libtorrent-output,target=/build/libtorrent-output \
\
echo -e "\033[0;32mlibtorrent compile check\033[0m"; set -xe; cd /build/libtorrent-output; \
\
touch /timestamp.check; \
sleep 1.1; \
\
make -j12 check TESTS=; \
\
find . \
  -not -type d -and \
  -newer /timestamp.check \
  -exec dirname '{}' \; | uniq | tr '\n' '\0' | ( \
    mkdir -p cd /deploy/libtorrent-output && \
    cd /deploy/libtorrent-output && \
    xargs -r0 -I {} sh -c 'mkdir -p "{}"; touch -r "/build/libtorrent-output/{}" "{}"' \
  ); \
find . \
  -not -type d -and \
  -newer /timestamp.check \
  -exec mv -v "{}" "/deploy/libtorrent-output/{}" \;


FROM "${REPOSITORY}/build/libtorrent/stage:${TAG_APPEND}"

ARG CONTEXT_TYPE
ARG CONTEXT_NAME

LABEL "rdo_stage__${CONTEXT_TYPE}__${CONTEXT_NAME}"="yes"

RUN --mount=type=bind,from=build,source=/deploy/libtorrent-output,target=/stage/libtorrent-output \
rsync -rlpgoD -muc -t /stage/libtorrent-output/ /deploy/libtorrent-output/
