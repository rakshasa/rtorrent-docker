# syntax=docker/dockerfile:experimental
#
# Prepare image ready for compiling the project, including selecting
# compiler family and version, configure flags, etc.

ARG REPOSITORY

FROM "${REPOSITORY}/ancestor/build:global"

WORKDIR /build

ARG RDO_COMPILER="clang"
ENV RDO_COMPILER="${RDO_COMPILER}"

RUN \
--mount=type=tmpfs,target=/var/cache/apk \
--mount=type=bind,from=rdo/cache/apk:global,source=/deploy,target=/var/cache/apk-stage \
\
echo -e "\033[0;32musing compiler family ${RDO_COMPILER}\033[0m"; set -xe; \
\
if [ "${RDO_COMPILER}" = "clang" ]; then \
  # clang requires crtbeginS.o from gcc and std headers from g++ \
  echo "export CC=clang CXX=clang++" >> /env.configure; \
  pkg-add gcc \
          g++ \
          gdb \
          clang; \
\
elif [ "${RDO_COMPILER}" = "gcc" ]; then \
  echo "export CC=gcc CXX=g++" >> /env.configure; \
  pkg-add gcc \
          g++ \
          gdb; \
\
else \
  echo -e "\033[0;31munknown compiler family: ${RDO_COMPILER}\033[0m"; \
  exit 1; \
fi

ARG RDO_COMPILER_STANDARD="c++11"
ENV RDO_COMPILER_STANDARD="${RDO_COMPILER_STANDARD}"
