#!/usr/bin/env bash

include_header stage

rdo_stage() {
  local project_path
  project_path="$(get_project_path)"

  eval "$(args::init_subcommand "rdo stage" "Manage staging of environments.")"

  args::new_command "clean" empty "Remove environment" \
                    'rdo_stage_clean "${@}"'
  args::new_command "init" empty "Initialize new environment for staging" \
                    'rdo_stage_init "${@}"'
  args::new_command "network" default "Add network" \
                    'rdo_stage_network "${@}"'
  args::new_command "node" default "Add node" \
                    'rdo_stage_node "${@}"'

  args::new_command "test" empty "Stage test environment" \
                    'rdo_stage_test "${@}"'

  eval "$(args::process)"
}

rdo_stage_test() {
  rdo_stage_init
  rdo_stage_network "network-1"
}

rdo_stage_clean() {
  rdo_docker_network clean > /dev/null
  rm -rf "${project_path}/stage"
}

rdo_stage_init() {
  rdo_stage_clean
  mkdir -p "${project_path}/stage/"{network,node}
}

rdo_stage_network() {
  local name="${1:?Missing name argument.}"
  local path="${project_path}/stage/network/${name}"

  mkdir -p "${path}"

  rdo_docker_network create "${name}" > /dev/null

  echo "$(rdo_docker_network subnet "${name}")" > "${path}/subnet"
  echo "$(rdo_docker_network address "${name}")" > "${path}/address"
  echo "$(rdo_docker_network prefix "${name}")" > "${path}/prefix"
}

rdo_stage_node() {
  local networks=()

  eval "$(args::init_options_string "rdo stage node NAME" "Add node to staging of environments.")"

  args::new_option "network" string "n" "Connect node to network" \
                   'networks+=("${args__1}")'

  eval "$(args::process)"

  # local name="${1:?Missing name argument.}"
  # local path="${project_path}/stage/node/${name}"

  # mkdir -p "${path}"
}
