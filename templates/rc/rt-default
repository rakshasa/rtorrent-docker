#!/bin/bash

cat - <<EOF
#
# Logging
#

# TODO: Rename 'critical' to something more descriptive.
log.open_file = "crash", /run/self/logs/crash.log
try = ((log.add_output, "critical", "crash"))


log.open_file = "connection", /run/self/logs/connection.log
log.open_file = "dht_all", /run/self/logs/dht_all.log
log.open_file = "net", /run/self/logs/net.log
log.open_file = "peer_list", /run/self/logs/peer_list.log
log.open_file = "rpc", /run/self/logs/rpc.log
log.open_file = "storage", /run/self/logs/storage.log
log.open_file = "system", /run/self/logs/system.log
log.open_file = "tracker_dump", /run/self/logs/tracker_dump.log
log.open_file = "tracker_events", /run/self/logs/tracker_events.log
log.open_file = "tracker_requests", /run/self/logs/tracker_requests.log

try = ((log.add_output, "connection", "connection"))
try = ((log.add_output, "dht_all", "dht_all"))
try = ((log.add_output, "net_resolver", "net"))
try = ((log.add_output, "peer_list_address", "peer_list"))
try = ((log.add_output, "peer_list_events", "peer_list"))
try = ((log.add_output, "rpc", "rpc"))
try = ((log.add_output, "storage", "storage"))
try = ((log.add_output, "system", "system"))
try = ((log.add_output, "tracker_dump", "tracker_dump"))
try = ((log.add_output, "tracker_events", "tracker_events"))
try = ((log.add_output, "tracker_requests", "tracker_requests"))


# TODO: Refactor:
log.open_file = "rtorrent", /run/self/logs/rtorrent.log
log.open_file = "torrent", /run/self/logs/torrent.log
log.open_file = "socket", /run/self/logs/socket.log
log.open_file = "storage_debug", /run/self/logs/storage_debug.log
log.open_file = "thread", /run/self/logs/thread.log
log.open_file = "tracker", /run/self/logs/tracker.log
log.open_file = "old_dht", /run/self/logs/old_dht.log

try = ((log.add_output, "debug", "rtorrent"))
try = ((log.add_output, "torrent_debug", "torrent"))
try = ((log.add_output, "socket_debug", "socket"))
try = ((log.add_output, "storage_debug", "storage_debug"))
try = ((log.add_output, "thread_debug", "thread"))
try = ((log.add_output, "tracker_debug", "tracker"))
try = ((log.add_output, "dht_debug", "old_dht"))

# Update to new format:
log.execute = /run/self/logs/execute.log

#
# Settings:
#

print = "Loaded from '/run/self/rc'"

directory.default.set = "/torrents"
session.path.set = "/run/self/session"

#directory.watch.added = /run/self/watch, load.start

schedule = watch_directory,1,1,load.start=/run/self/watch/*.torrent
schedule = watch_untied, 1, 1, remove_untied=

method.set_key = event.download.finished,state_finished,((execute,touch,((cat,/run/self/torrents/,((d.name)),.completed)) ))
method.set_key = event.download.hash_done,state_hash_done,((execute,touch,((cat,/run/self/torrents/,((d.name)),.hash_done)) ))
method.set_key = event.download.hash_done,state_hash_done.seeding, {(branch,((d.complete)),((execute,touch,(cat,/run/self/torrents/,(d.name),.seeding))))}

#
# Per-node optional resource file:
#

# try_import = /data/shared/config/extra.rc
# try_import = /data/local/config/extra.rc

#
# Others:
#

#network.scgi.open_port = ":5001"
EOF
